# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Main.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import cv2 as cv
import mediapipe as mp
from PyQt5 import QtCore, QtGui, QtWidgets
from threading import Thread
from PyQt5.QtGui import QImage,QPixmap
from MPUtility import Utility
from ConfigHandler import Handler
import subprocess
import time

class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        self.ut = Utility()
        self.state = {"stop":True,
                      "start":False,
                      "exec":False}
        self.cHandler = Handler()

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(46, 46, 46))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 35))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(46, 46, 46))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 35))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 35))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 35))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        MainWindow.setPalette(palette)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(10, 10, 351, 291))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(233, 248, 249))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(233, 248, 249))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(160, 160, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)

        self.groupBox.setPalette(palette)
        self.groupBox.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.groupBox.setFlat(False)
        self.groupBox.setObjectName("groupBox")

        self.verticalLayoutWidget = QtWidgets.QWidget(self.groupBox)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(9, 9, 51, 281))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_4.setObjectName("label_4")
        self.verticalLayout.addWidget(self.label_4)
        self.label_5 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_5.setObjectName("label_5")
        self.verticalLayout.addWidget(self.label_5)
        self.label_3 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_3.setObjectName("label_3")
        self.verticalLayout.addWidget(self.label_3)
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.groupBox)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(59, 9, 291, 281))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.t1 = QtWidgets.QTextEdit(self.verticalLayoutWidget_2)
        self.t1.setObjectName("t1")
        self.verticalLayout_2.addWidget(self.t1)
        self.t2 = QtWidgets.QTextEdit(self.verticalLayoutWidget_2)
        self.t2.setObjectName("t2")
        self.verticalLayout_2.addWidget(self.t2)
        self.t3 = QtWidgets.QTextEdit(self.verticalLayoutWidget_2)
        self.t3.setObjectName("t3")
        self.verticalLayout_2.addWidget(self.t3)
        self.t4 = QtWidgets.QTextEdit(self.verticalLayoutWidget_2)
        self.t4.setObjectName("t4")
        self.verticalLayout_2.addWidget(self.t4)
        self.t5 = QtWidgets.QTextEdit(self.verticalLayoutWidget_2)
        self.t5.setObjectName("t5")
        self.tList = [self.t1,self.t2,self.t3,self.t4,self.t5]
        self.verticalLayout_2.addWidget(self.t5)
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(80, 360, 171, 41))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(20, 370, 57, 16))
        self.label_6.setObjectName("label_6")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(400, 10, 391, 291))
        self.groupBox_2.setObjectName("groupBox_2")
        self.videocam = QtWidgets.QLabel(self.groupBox_2)
        self.videocam.setGeometry(QtCore.QRect(16, 25, 361, 251))
        self.videocam.setText("")
        self.videocam.setPixmap(QtGui.QPixmap("index.png"))
        self.videocam.setScaledContents(True)
        self.videocam.setObjectName("videocam")
        self.start = QtWidgets.QPushButton(self.centralwidget)
        self.start.setGeometry(QtCore.QRect(260, 360, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.start.setFont(font)
        self.start.setObjectName("start")
        self.start.clicked.connect(self.startF)
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(530, 340, 71, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(630, 320, 81, 61))
        font = QtGui.QFont()
        font.setPointSize(22)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        MainWindow.setCentralWidget(self.centralwidget)
        # self.loaded = True
        # if self.loaded and self.loaded == True:
        self.camthread = Thread(target=self.capture)
        self.camthread.start()
        self.gesturethread = Thread(target=self.updateGesture)
        self.gesturethread.start()

        self.execThread = Thread(target=self.execF)
        self.execThread.start()
        cmds = self.cHandler.getAllCommands()
        for i,t in enumerate(self.tList):
            t.setText(cmds[i])
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "Scripts"))
        self.label.setText(_translate("MainWindow", "One :"))
        self.label_4.setText(_translate("MainWindow", "Two :"))
        self.label_5.setText(_translate("MainWindow", "Three :"))
        self.label_3.setText(_translate("MainWindow", "Four :"))
        self.label_2.setText(_translate("MainWindow", "FIve :"))
        self.comboBox.setItemText(0, _translate("MainWindow", "ANN (Recommended)"))
        self.comboBox.setItemText(1, _translate("MainWindow", "ALGO"))
        self.label_6.setText(_translate("MainWindow", "Model : "))
        self.groupBox_2.setTitle(_translate("MainWindow", "VideoCam"))
        self.start.setText(_translate("MainWindow", "Start"))
        self.label_7.setText(_translate("MainWindow", "Gesture : "))
        self.label_8.setText(_translate("MainWindow", "NaN"))

    def capture(self):
        vidsrc =cv.VideoCapture(0)
     
        
        while True:

            if self.state["start"] == True:
                _,img = vidsrc.read()
                if _:
                    img = cv.cvtColor(img,cv.COLOR_BGR2RGB)

                    self.img = self.ut.draw(img)
                        
                    # self.label_8.adjustSize()

                    h,w,_ = self.img.shape
                    bytesPerL = w* 3
                    Qimg = QImage(self.img.data ,w,h,bytesPerL,QImage.Format_RGB888)

                    #bug here!
                    pixMap = QPixmap.fromImage(Qimg)

                    self.videocam.setPixmap(pixMap)
            elif self.state["stop"] == True:
                self.videocam.setPixmap(QtGui.QPixmap("index.png"))
                time.sleep(1)
            # if self.state["stop"] == True:
            #     
            
    def updateGesture(self):
        import time
        while True:
            if self.state["start"] == True:
                
                #bug here!!!

                if self.ut.startT2:
                    if self.ut.predictGesture() not  in  ['exec',None]:
                        self.gesture = self.ut.predictGesture()
                    self.label_8.setText(str(self.ut.predictGesture()))
                    if self.ut.predictGesture() == "exec":
                        self.state["exec"] = True
                        self.setFalse("exec")
            else:
                    time.sleep(1)
    def setFalse(self,state):
        for k in self.state.keys():
            if k != state:
                self.state[k] = False

    def startF(self):
        self.state["start"] = True
        self.setFalse("start")

    def execF(self):
        while True:
            if self.state["exec"] == True:
                cmd = self.cHandler.getCommand(str(self.gesture))
                print(cmd)
                if cmd not in [None,'None']:
                    cmd = cmd.split(" ")
                    subprocess.run(cmd)
                    subprocess.run(["notify-send",str(self.gesture)])
                    self.videocam.setPixmap(QtGui.QPixmap("index.png"))
                    time.sleep(3)
                    self.state["start"] = True
                    self.setFalse("start")
            else:
                time.sleep(1)
                

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
   
    ui.setupUi(MainWindow)

    MainWindow.show()
    sys.exit(app.exec_())

